AWSTemplateFormatVersion: 2010-09-09
Description: "Cf-Stack for the cicd-pipeline regarding base-infrastructure in all stages"

Parameters:
  Project:
    Description: Project name
    Type: String
  Repository:
    Description: Repository name
    Type: String
  Suffix:
    Description: Sanitized suffix name, safe to use for CF resource names
    Type: String
  Branch:
    Description: The original unsanitized branch name to reference in Git configuration
    Type: String
  Stage:
    Description: "Pipeline stage"
    Type: String
  RemotePreviewAccount:
    Description: "Remote child account: development or integration"
    Type: String
  RemoteDeliveryAccount:
    Description: "Remote delivery child account: production"
    Type: String
    Default: "NO_VALUE"
  ArtifactBucket:
    Description: "Artifact Bucket"
    Type: String
  PipelineKmsKeyArn:
    Description: "Pipeline KMS key"
    Type: String
  PipelineServiceRoleArn: # => pipelineServiceRole
    Description: Service role ARN to pass to pipeline
    Type: String
  DynamicPipelineCleanupLambdaArn:
    Description: CF Stack cleanup Lambda ARN
    Type: String

Conditions:
  ShouldCreateForDelivery: !Equals [ !Ref Stage, "delivery" ]
  ShouldCreateForDev: !Equals [ !Ref Stage, "dev" ]

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "ecr-microservices-${Stage}-${Suffix}"
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !Sub arn:aws:iam::${RemotePreviewAccount}:root
                - !If [ShouldCreateForDelivery, !Sub "arn:aws:iam::${RemoteDeliveryAccount}:root", !Ref "AWS::NoValue"]
            Action:
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:BatchDeleteImage"
              - "ecr:BatchGetImage"
              - "ecr:CompleteLayerUpload"
              - "ecr:DeleteLifecyclePolicy"
              - "ecr:DeleteRepository"
              - "ecr:DeleteRepositoryPolicy"
              - "ecr:DescribeImages"
              - "ecr:DescribeRepositories"
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:GetLifecyclePolicy"
              - "ecr:GetLifecyclePolicyPreview"
              - "ecr:GetRepositoryPolicy"
              - "ecr:InitiateLayerUpload"
              - "ecr:ListImages"
              - "ecr:PutImage"
              - "ecr:PutLifecyclePolicy"
              - "ecr:SetRepositoryPolicy"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: STAGE
            Value: !Ref Stage
          - Name: DEVOPS_ACCOUNT_ID
            Value: !Sub ${AWS::AccountId}
          - Name: ECR_NAME
            Value: !Ref ECRRepository
          - Name: REPOSITORY
            Value: !Ref Repository
          - Name: SUFFIX
            Value: !Ref Suffix
      Name: !Ref AWS::StackName
      ServiceRole: !Ref PipelineServiceRoleArn

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${Repository}-ms-pipeline-${Stage}-${Suffix}"
      ArtifactStore:
        EncryptionKey:
          Id: !Ref PipelineKmsKeyArn
          Type: KMS
        Location: !Ref ArtifactBucket
        Type: S3
      RestartExecutionOnUpdate: False
      RoleArn: !Ref PipelineServiceRoleArn
      Stages:
        - Name: Checkout-SourceCode
          Actions:
            - Name: Checkout-SourceCode
              Namespace: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref Project
                Repo: !Ref Repository
                Branch: !Ref Branch
                PollForSourceChanges: !If [ShouldCreateForDelivery, "false", "true"]
                OAuthToken: "{{resolve:ssm:GitHubToken:1}}"
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: BuildAndPush
          Actions:
            - Name: BuildAndPushImage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: S3BucketPreview
          Actions:
            - Name: S3BucketPreview
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE 
                StackName: !Sub "s3-bucket-${Stage}-${Suffix}"
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: SourceArtifact::infrastructure/s3/template.yaml
                ParameterOverrides: 
                  Fn::Sub: |
                    {
                      "Stage" : "${Stage}",
                      "Suffix" : "${Suffix}"
                    }
                OutputFileName: output.json
                RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemotePreviewAccount}"
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: S3BucketPreview
              RunOrder: 2
              RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}" 

        - Name: !If
            - ShouldCreateForDelivery
            - 'DeployInfrastructureToInt'
            - 'DeployInfrastructureToDev'
          Actions:
            - Name: DeployDynamoDbTable
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Sub "ddbTable-${Stage}-${Suffix}"
                RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemotePreviewAccount}"
                TemplatePath: "SourceArtifact::infrastructure/ddb/template.yaml"
                ParameterOverrides:
                  Fn::Sub: |
                    {
                      "Project": "${Project}",
                      "Repository": "${Repository}",
                      "Stage": "${Stage}",
                      "Suffix" : "${Suffix}"
                    }
              InputArtifacts:
                - Name: SourceArtifact
              RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}"
              RunOrder: 1
            - Name: DeployELB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Sub elb-${Stage}-${Suffix}
                RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemotePreviewAccount}"
                TemplatePath: "SourceArtifact::infrastructure/elb/template.yaml"
                ParameterOverrides:
                  Fn::Sub: |
                    {
                      "Project": "${Project}",
                      "Repository": "${Repository}",
                      "Stage": "${Stage}",
                      "Suffix" : "${Suffix}",
                      "VpcStackName": "base-vpc-${Stage}-master"
                    }
              InputArtifacts:
                - Name: SourceArtifact
              RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}"
              RunOrder: 2
            - Name: DeployEcsTaskAndService
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Sub "ecsTaskAndService-${Stage}-${Suffix}"
                RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemotePreviewAccount}"
                TemplatePath: "SourceArtifact::infrastructure/ecstask/template.yaml"
                ParameterOverrides:
                  Fn::Sub: |
                    {
                      "Project": "${Project}",
                      "Repository": "${Repository}",
                      "Stage": "${Stage}",
                      "Suffix" : "${Suffix}",
                      "VpcStackName": "base-vpc-${Stage}-master",
                      "ElbStackName": "elb-${Stage}-${Suffix}",
                      "EcsClusterStackName": "base-ecsCluster-${Stage}-master",
                      "CommitId": "#{Source.CommitId}",
                      "EcrName": "${ECRRepository}",
                      "DevOpsAccountId": "${AWS::AccountId}",
                      "S3Bucket" : {"Fn::GetParam" : ["S3BucketPreview", "output.json", "ArtifactBucket"]}
                    }
              InputArtifacts:
                - Name: SourceArtifact
              RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}"
              RunOrder: 3
        - Name: !If
            - ShouldCreateForDelivery
            - 'DeployMicroserviceToInt'
            - 'DeployMicroserviceToDev'
          Actions:
            - Name: DeployECS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Sub base-ecsCluster-${Stage}-master
                ServiceName: !Sub ecsService-${Repository}-${Stage}-${Suffix}
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 2
              RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}"

        - !If
          - ShouldCreateForDelivery
          - Name: ApproveBeforeProd
            Actions:
              - Name: Approve
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: 1
                Configuration:
                  CustomData: 'Approve or Reject with comments here.'
                RunOrder: 1
          - !Ref AWS::NoValue

        - !If
          - ShouldCreateForDelivery
          - Name: S3BucketProd
            Actions:
              - Name: S3Bucket
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                Configuration:
                  ActionMode: CREATE_UPDATE 
                  StackName: !Sub "s3-bucket-${Stage}-${Suffix}"
                  Capabilities: CAPABILITY_NAMED_IAM
                  TemplatePath: SourceArtifact::infrastructure/s3/template.yaml
                  ParameterOverrides: 
                    Fn::Sub: |
                      {
                        "Stage" : "${Stage}",
                        "Suffix" : "${Suffix}"
                      }
                  OutputFileName: output.json
                  RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemoteDeliveryAccount}"
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: S3BucketProd
                RunOrder: 2
                RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemoteDeliveryAccount}" 
          - !Ref AWS::NoValue
        - !If
          - ShouldCreateForDelivery
          - Name: 'DeployInfrastructureToProd'
            Actions:
              - Name: DeployDynamoDbTable
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: 1
                Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  StackName: !Sub "ddbTable-${Stage}-${Suffix}"
                  RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemoteDeliveryAccount}"
                  TemplatePath: "SourceArtifact::infrastructure/ddb/template.yaml"
                  ParameterOverrides:
                    Fn::Sub: |
                      {
                        "Project": "${Project}",
                        "Repository": "${Repository}",
                        "Stage": "${Stage}",
                        "Suffix" : "${Suffix}"
                      }
                InputArtifacts:
                  - Name: SourceArtifact
                RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemoteDeliveryAccount}"
                RunOrder: 1
              - Name: DeployELB
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: 1
                Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  StackName: !Sub elb-${Stage}-${Suffix}
                  RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemoteDeliveryAccount}"
                  TemplatePath: "SourceArtifact::infrastructure/elb/template.yaml"
                  ParameterOverrides:
                    Fn::Sub: |
                      {
                        "Project": "${Project}",
                        "Repository": "${Repository}",
                        "Stage": "${Stage}",
                        "Suffix" : "${Suffix}",
                        "VpcStackName": "base-vpc-${Stage}-master"
                      }
                InputArtifacts:
                  - Name: SourceArtifact
                RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemoteDeliveryAccount}"
                RunOrder: 2
              - Name: DeployEcsTaskAndService
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: 1
                Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  StackName: !Sub "ecsTaskAndService-${Stage}-${Suffix}"
                  RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemoteDeliveryAccount}"
                  TemplatePath: "SourceArtifact::infrastructure/ecstask/template.yaml"
                  ParameterOverrides:
                    Fn::Sub: |
                      {
                        "Project": "${Project}",
                        "Repository": "${Repository}",
                        "Stage": "${Stage}",
                        "Suffix" : "${Suffix}",
                        "VpcStackName": "base-vpc-${Stage}-master",
                        "ElbStackName": "elb-${Stage}-${Suffix}",
                        "EcsClusterStackName": "base-ecsCluster-${Stage}-master",
                        "CommitId": "#{Source.CommitId}",
                        "EcrName": "${ECRRepository}",
                        "DevOpsAccountId": "${AWS::AccountId}",
                        "S3Bucket" : {"Fn::GetParam" : ["S3BucketProd", "output.json", "ArtifactBucket"]}
                      }
                InputArtifacts:
                  - Name: SourceArtifact
                RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemoteDeliveryAccount}"
                RunOrder: 3
          - !Ref AWS::NoValue

        - !If
          - ShouldCreateForDelivery
          - Name: 'DeployMicroserviceToProd'
            Actions:
              - Name: DeployECS
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: ECS
                Configuration:
                  ClusterName: !Sub base-ecsCluster-${Stage}-master
                  ServiceName: !Sub ecsService-${Repository}-${Stage}-${Suffix}
                InputArtifacts:
                  - Name: BuildOutput
                RunOrder: 2
                RoleArn: !Sub "arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemoteDeliveryAccount}"
          - !Ref AWS::NoValue

  ##Cleanup:

  CleanupDynamoDB:
    Type: "AWS::CloudFormation::CustomResource"
    Condition: ShouldCreateForDev
    Version: '1.0'
    Properties:
      ServiceToken: !Ref DynamicPipelineCleanupLambdaArn
      RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}
      Region: !Ref AWS::Region
      StackName: !Sub "ddbTable-${Stage}-${Suffix}"

  CleanupS3Bucket:
    Type: "AWS::CloudFormation::CustomResource"
    Condition: ShouldCreateForDev
    Version: '1.0'
    Properties:
      ServiceToken: !Ref DynamicPipelineCleanupLambdaArn
      RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}
      Region: !Ref AWS::Region
      StackName: !Sub "s3-bucket-${Stage}-${Suffix}"

  CleanupELB:
    Type: "AWS::CloudFormation::CustomResource"
    Condition: ShouldCreateForDev
    Version: '1.0'
    Properties:
      ServiceToken: !Ref DynamicPipelineCleanupLambdaArn
      RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}
      Region: !Ref AWS::Region
      StackName: !Sub "elb-${Stage}-${Suffix}"

  CleanupEcsTaskAndService:
    Type: "AWS::CloudFormation::CustomResource"
    Condition: ShouldCreateForDev
    DependsOn: CleanupELB
    Version: '1.0'
    Properties:
      ServiceToken: !Ref DynamicPipelineCleanupLambdaArn
      RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}
      Region: !Ref AWS::Region
      StackName: !Sub "ecsTaskAndService-${Stage}-${Suffix}"
