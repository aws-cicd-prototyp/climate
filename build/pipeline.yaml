AWSTemplateFormatVersion: 2010-09-09
Description: "Cf-Stack for the cicd-pipeline regarding base-infrastructure in all stages"

Parameters:
  Project:
    Description: Project name
    Type: String
  Repository:
    Description: Repository name
    Type: String
  Suffix:
    Description: Sanitized suffix name, safe to use for CF resource names
    Type: String
  Branch:
    Description: The original unsanitized branch name to reference in Git configuration
    Type: String
  Stage:
    Description: "Pipeline stage"
    Type: String
  RemotePreviewAccount:
    Description: "Remote child account: development or integration"
    Type: String
  RemoteDeliveryAccount:
    Description: "Remote delivery child account: production"
    Type: String
    Default: "NO_VALUE"
  ArtifactBucket:
    Description: "Artifact Bucket"
    Type: String
  PipelineKmsKeyArn:
    Description: "Pipeline KMS key"
    Type: String
  PipelineServiceRoleArn: # => pipelineServiceRole
    Description: Service role ARN to pass to pipeline
    Type: String
  DynamicPipelineCleanupLambdaArn:
    Description: CF Stack cleanup Lambda ARN
    Type: String
  CreateForDelivery:
    Description: Conditional-Param that indicates whether a pipeline should be created for delivery(int,prod) or preview(dev)
    Type: String
    Default: false
    AllowedValues: [true, false]
  EcrName:
    Description: The name for the central devOps ecr-repo
    Type: String
    Default: ecr-microservices

Conditions:
  ShouldCreateForDelivery: !Equals [ !Ref CreateForDelivery, true ]

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref EcrName
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !Sub arn:aws:iam::${RemotePreviewAccount}:root
                - !Sub arn:aws:iam::${RemoteDeliveryAccount}:root
            Action:
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:BatchDeleteImage"
              - "ecr:BatchGetImage"
              - "ecr:CompleteLayerUpload"
              - "ecr:DeleteLifecyclePolicy"
              - "ecr:DeleteRepository"
              - "ecr:DeleteRepositoryPolicy"
              - "ecr:DescribeImages"
              - "ecr:DescribeRepositories"
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:GetLifecyclePolicy"
              - "ecr:GetLifecyclePolicyPreview"
              - "ecr:GetRepositoryPolicy"
              - "ecr:InitiateLayerUpload"
              - "ecr:ListImages"
              - "ecr:PutImage"
              - "ecr:PutLifecyclePolicy"
              - "ecr:SetRepositoryPolicy"


#  CodeBuild: ... #CodeBuildRolle = PipelineServiceRoleArn
#  => bauen von buildspec.yaml nur in INT account. INT pushed auf INT+PROD. PROD hat dann kein build mehr.
#  => ArtifactPropergation


  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: CREATE_FOR_DELIVERY
            Value: !Ref CreateForDelivery
          - Name: DEVOPS_ACCOUNT_ID
            Value: !Sub ${AWS::AccountId}
          - Name: ECR_NAME
            Value: !Ref EcrName
          - Name: REPOSITORY
            Value: !Ref Repository
          - Name: SUFFIX
            Value: !Ref Suffix
      Name: !Ref AWS::StackName
      ServiceRole: !Ref PipelineServiceRoleArn

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "microservice-pipeline-${Project}-${Repository}-${Stage}-${Suffix}"
      ArtifactStore:
        EncryptionKey:
          Id: !Ref PipelineKmsKeyArn
          Type: KMS
        Location: !Ref ArtifactBucket
        Type: S3
      RestartExecutionOnUpdate: False
      RoleArn: !Ref PipelineServiceRoleArn
      Stages:
        - Name: Checkout-SourceCode
          Actions:
            - Name: Checkout-SourceCode
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref Project
                Repo: !Ref Repository
                Branch: !Ref Branch
                PollForSourceChanges: False
                OAuthToken: 123
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: !If
            - ShouldCreateForDelivery
            - 'DeployInfrastructureToInt'
            - 'DeployInfrastructureToDev'
          Actions:
            - Name: DeployDynamoDbTable
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Sub "ddbTable-${Stage}-${Suffix}"
                RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemotePreviewAccount}"
                TemplatePath: "SourceArtifact::infrastructure/ddb/template.yaml"
                ParameterOverrides:
                  Fn::Sub: |
                    {
                      "Project": "${Project}",
                      "Repository": "${Repository}",
                      "Stage": "${Stage}",
                      "Suffix" : "${Suffix}"
                    }
              InputArtifacts:
                - Name: SourceArtifact
              RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}"
              RunOrder: 1
            - Name: DeployELB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Sub elb-${Repository}-${Stage}-${Suffix}
                RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemotePreviewAccount}"
                TemplatePath: "SourceArtifact::infrastructure/elb/template.yaml"
                ParameterOverrides:
                  Fn::Sub: |
                    {
                      "Project": "${Project}",
                      "Repository": "${Repository}",
                      "Stage": "${Stage}",
                      "Suffix" : "${Suffix}"
                    }
              InputArtifacts:
                - Name: SourceArtifact
              RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}"
              RunOrder: 2
            - Name: DeployEcsTaskAndService
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Sub "ecsTaskAndService-${Stage}-${Suffix}"
                RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemotePreviewAccount}"
                TemplatePath: "SourceArtifact::infrastructure/ecstask/template.yaml"
                ParameterOverrides:
                  Fn::Sub: |
                    {
                      "Project": "${Project}",
                      "Repository": "${Repository}",
                      "Stage": "${Stage}",
                      "Suffix" : "${Suffix}"
                    }
              InputArtifacts:
                - Name: SourceArtifact
              RoleArn: !Sub "arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}"
              RunOrder: 3
        - Name: BuildMicroservice
          Actions:
            - Name: BuildAndPushImage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

#            - Name: DeployToEcr
#              Actions:
#                - Name: Deploy
#                  ActionTypeId:
#                    Category: Deploy
#                    Owner: AWS
#                    Version: 1
#                    Provider: ECS
#                  Configuration:
#                    ClusterName: !Sub ${EcsClusterName}
#                    ServiceName: !Sub ${EcsServiceName}
#                  InputArtifacts:
#                    - Name: BuildOutput
#                  RunOrder: 1
#                  RoleArn: !Sub ${MsEcrCrossAccountRole}
