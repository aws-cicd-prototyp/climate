version: 0.2

env:
  variables:
    CREATE_FOR_DELIVERY: "get value from pipeline-cloudformation"
    DEVOPS_ACCOUNT_ID: "get value from pipeline-cloudformation"
    ECR_NAME: "get value from pipeline-cloudformation"
    REPOSITORY: "get value from pipeline-cloudformation"
    SUFFIX: "get value from pipeline-cloudformation"

phases:
  install:
    runtime-versions:
      java: openjdk8
  pre_build:
    commands:
      - set -e
      - echo log-in into ecr
      - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${DEVOPS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com
      - REPOSITORY_URI=${DEVOPS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com/${ECR_NAME}
  build:
    commands:
      - echo start build on `date`
      - set -e
      - ls -lah
      - mvn clean install
      - |
        if [ $CREATE_FOR_DELIVERY = "true" ]
        then
          echo "start build and push process for DELIVERY (int,prod) stages:"

          docker build -f src/main/docker/Dockerfile.jvm -t ${REPOSITORY}-${SUFFIX}-delivery-image:$CODEBUILD_RESOLVED_SOURCE_VERSION .

          docker tag ${REPOSITORY}-${SUFFIX}-delivery-image:$CODEBUILD_RESOLVED_SOURCE_VERSION \
          $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION

          docker push $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
          printf '[{"name":"%s-%s-container","imageUri":"%s:%s"}]' ${REPOSITORY} ${SUFFIX} ${REPOSITORY_URI} $CODEBUILD_RESOLVED_SOURCE_VERSION > imagedefinitions.json

        elif [ $CREATE_FOR_DELIVERY = "false" ]
        then
          echo "start build and push process for PREVIEW (dev) stage:"

          docker build -f src/main/docker/Dockerfile.jvm -t ${REPOSITORY}-${SUFFIX}-preview-image:${SUFFIX} .

          docker tag ${REPOSITORY}-${SUFFIX}-preview-image:${SUFFIX} \
          $REPOSITORY_URI:${SUFFIX}

          docker push $REPOSITORY_URI:${SUFFIX}
          printf '[{"name":"%s-%s-container","imageUri":"%s:%s"}]' ${REPOSITORY} ${SUFFIX} ${REPOSITORY_URI} ${SUFFIX} > imagedefinitions.json

        else
          echo "!!! ERROR, invalid boolean for env-variable: CREATE_FOR_DELIVERY !!!"
        fi
artifacts:
  files:
    - imagedefinitions.json
